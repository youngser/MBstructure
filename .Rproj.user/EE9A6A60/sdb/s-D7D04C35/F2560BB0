{
    "collab_server" : "",
    "contents" : "semiparYQ <- function(Xhat4, K=8, verbose=FALSE)\n{\n    suppressMessages(library(mvtnorm))\n\n    n=dim(Xhat4)[1]\n    p=dim(Xhat4)[2]\n\n    x=Xhat4\n    n=dim(x)[1]\n    p=dim(x)[2]\n    #    K=8\n    pis=rep(1/K,K)\n    mean1=rep(0,p)\n    mean2=c(-1.1,-0.3,0.5,-0.8,-0.5,-0.2)\n    mean3=c(-0.5,2,-1,-0.5, 1.5,-0.1)\n    mean1=mean1+0.2*mean3\n    mean2=0.8*mean2\n    mean3=0.1*mean3\n    var1=0.005\n    var2=0.008\n    means=matrix(NA,K,p) # K x d\n    vars=array(NA,dim=c(p,p,K))\n    for (i in 1:K)\n    {\n        t=(i-1)/(K-1)\n        means[i,]=(1-t)^2*mean1+2*(1-t)*t*mean3+t^2*mean2\n        vars[,,i]=(1-t)*diag(var1,p)+t*diag(var2,p)\n    }\n\n    min_vars <- function(arg)\n    {\n        vars=array(NA,dim=c(p,p,K))\n        lkhd=0\n        for (k in 1:K)\n        {\n            t=(k-1)/(K-1)\n            vars[,,k]=(1-t)*diag(rep(arg[1],p))+t*diag(rep(arg[2],p))\n            lkhd=lkhd+sum(z[,k]*(dmvnorm(x, means[k,], vars[,,k], log=TRUE)+log(pis[k])))\n        }\n        return(-lkhd)\n    }\n\n    min_means <- function(arg)\n    {\n        mean1=arg[1:p]\n        mean2=arg[(p+1):(2*p)]\n        mean3=arg[(2*p+1):(3*p)]\n        means=matrix(NA,K,p)\n        lkhd=0\n        for (k in 1:K)\n        {\n            t=(k-1)/(K-1)\n            means[k,]=(1-t)^2*mean1+2*(1-t)*t*mean3+t^2*mean2\n            lkhd=lkhd+sum(z[,k]*(dmvnorm(x, means[k,], vars[,,k], log=TRUE)+log(pis[k])))\n        }\n        return(-lkhd)\n    }\n\n\n\n    it_max=30\n    for (it in 1:it_max)\n    {\n        means_old=means\n\n        ## E step\n        comp_pdf=matrix(NA,n,K)\n        z=matrix(NA,n,K)\n        for (k in 1:K)\n        {\n            comp_pdf[,k]=dmvnorm(x, means[k,], vars[,,k], log=FALSE)\n        }\n        for (i in 1:n)\n        {\n            z[i,]=comp_pdf[i,]*pis/sum(comp_pdf[i,]*pis)\n        }\n\n        ## M step for variance\n        opt_var=optim(c(var1,var2), min_vars, method = \"L-BFGS-B\",\n                      lower=c(0.001,0.001),\n                      upper=c(0.3,0.3))\n        var1=opt_var$par[1]\n        var2=opt_var$par[2]\n        vars=array(NA,dim=c(p,p,K))\n        for (i in 1:K)\n        {\n            t=(i-1)/(K-1)\n            vars[,,i]=(1-t)*diag(rep(var1,p))+t*diag(rep(var2,p))\n        }\n\n        ## E step\n        comp_pdf=matrix(NA,n,K)\n        z=matrix(NA,n,K)\n        for (k in 1:K)\n        {\n            comp_pdf[,k]=dmvnorm(x, means[k,], vars[,,k], log=FALSE)\n        }\n        for (i in 1:n)\n        {\n            z[i,]=comp_pdf[i,]*pis/sum(comp_pdf[i,]*pis)\n        }\n\n        ## M step for means\n        min_means(c(mean1,mean2,mean3))\n        opt_means=optim(c(mean1,mean2,mean3), min_means, method = \"L-BFGS-B\",\n                        lower=c(apply(x,2,min),apply(x,2,min),apply(x,2,min)-3*apply(x,2,sd)),\n                        upper=c(apply(x,2,max),apply(x,2,max),apply(x,2,max)+3*apply(x,2,sd))\n        )\n        mean1=opt_means$par[1:p]\n        mean2=opt_means$par[(p+1):(2*p)]\n        mean3=opt_means$par[(2*p+1):(3*p)]\n        means=matrix(NA,K,p)\n        for (i in 1:K)\n        {\n            t=(i-1)/(K-1)\n            means[i,]=(1-t)^2*mean1+2*(1-t)*t*mean3+t^2*mean2\n        }\n        member=apply(z,1,function(x){which(x==max(x))[1]})\n        table(member)\n\n        ## update pis or not\n        pis=apply(z,2,sum)/sum(z)\n\n\n        diff=sum(abs(means-means_old))\n        ## likelihood function\n        individual_pdf=rep(0,n)\n        for (k in 1:K)\n        {\n            individual_pdf=individual_pdf+pis[k]*dmvnorm(x, means[k,], vars[,,k], log=FALSE)\n        }\n        incomp_lkhd=sum(log(individual_pdf))\n        if (verbose) {\n            cat(\"incomplete likelihood is\",incomp_lkhd,\"\\n\")\n            cat(\"diff is\",diff,\"\\n\")\n        }\n    }\n\n    # Ending EM algorithm\n    return(list(means=means,mean1=mean1,mean2=mean2,mean3=mean3,vars=vars,pis=pis))\n}\n\n\nplotMLE <- function(Xhat, vdf)\n{\n    suppressMessages(library(ggplot2))\n    suppressMessages(library(RColorBrewer))\n    suppressMessages(library(packcircles))\n\n\n    K <- 100\n    Xhat4 <- Xhat[vdf$type==\"KC\",]\n    n <- nrow(Xhat4)\n    p <- ncol(Xhat4)\n\n    out <- semiparYQ(Xhat4, K=K, verbose=FALSE)\n\n    means <- out$means\n    vars <- t(sapply(1:dim(out$vars)[3],function(x) sqrt(diag(out$vars[,,x]))))\n    K <- nrow(means)\n\n    Xhat5 <- rbind(Xhat4,means)\n    colnames(Xhat5) <- c(paste(\"out\",1:3),paste(\"in\",1:3))\n    ggY <- makePairs(as.data.frame(Xhat5))\n    ndf <- nrow(ggY$all)\n    mydf.yq <- data.frame(ggY$all, type=rep(c(rep(\"KC\",nrow(Xhat4)),rep(\"MLE\",nrow(means))),length=ndf))\n\n    alpha <- 0.7\n    tmpcol <- gg_color_hue(2,alpha=alpha)\n\n    # Figure 8\n    p1 <- ggplot(mydf.yq, aes_string(x = \"x\", y = \"y\")) +\n        facet_grid(xvar ~ yvar, scales = \"free\") +\n        geom_point(aes(colour=type), na.rm = TRUE, alpha=alpha,size=1) +\n        scale_colour_manual(values=c(tmpcol[1],\"darkred\")) +\n        #  scale_shape_manual(values=1:nlevels(mydf3$cluster)) +\n        #  scale_shape_manual(values=as.character(1:mc3$G)) +\n        stat_density(aes(x = x, y = ..scaled.. * diff(range(x)) + min(x)),\n                     data = ggY$densities, position = \"identity\",\n                     colour = \"grey20\", geom = \"line\") +\n        theme(axis.title=element_text(size=0)) +\n        theme(axis.text.x=element_text(size=0)) +\n        theme(axis.ticks = element_line(size = 0)) +\n        theme(axis.text.y=element_text(size=0)) +\n        theme(strip.text=element_text(size=rel(1.2))) +\n        theme(legend.title = element_text(colour=\"black\", size=14, face=\"bold\")) +\n        theme(legend.text = element_text(colour=\"black\", size = 12, face = \"plain\"))\n    print(p1)\n\n    # Figure 9\n    dd <- data.frame(x=Xhat[,1], y=Xhat[,2], vdf)\n    mytab <- with(dd,table(type,cluster))\n    type2 <- factor(rownames(mytab)[apply(mytab,2,which.max)])\n    dd$type2 <- type2[vdf$cluster]\n    Khat <- max(as.numeric(dd$cluster))\n#    p3 <- ggplot(dd,aes(x=x,y=y)) +\n#        geom_point(aes(shape=cluster,color=type,fill=type),size=3,alpha=0.9) +\n#        scale_shape_manual(values=as.character(1:Khat)) #+\n    dd3 <- subset(dd, type2!=\"KC\")    # ellipse\n    dd4 <- data.frame(x=means[,1],y=means[,2],sdx=vars[,1],sdy=vars[,2])\n    tmpcol <- gg_color_hue(2)\n #   p3 <- p3 + stat_ellipse(data=dd3,geom=\"polygon\",aes(fill=type2,color=type2),alpha=.2,show.legend=F) +\n #       geom_line(data=dd4,color=\"darkred\",size=1.5) +\n #       geom_ribbon(data=dd4,aes(ymin=y-1.96*sdx,ymax=y+1.96*sdy),alpha=0.2,fill=\"darkred\")\n\n    layout <- data.frame(id=1:nrow(means), x=means[,1], y=means[,2], r=1.96*vars[,1])\n    cir <- circlePlotData(layout, id.col=1, xyr.cols=2:4)\n    p3 <- ggplot(dd,aes(x=x,y=y)) +\n        geom_polygon(data=cir, aes(x, y, group=id), fill=\"rosybrown1\", colour=\"rosybrown1\", alpha=1) +\n        geom_point(aes(shape=cluster,color=type,fill=type),size=3,alpha=0.9) +\n        scale_shape_manual(values=as.character(1:Khat)) #+\n    p3 <- p3 + stat_ellipse(data=dd3,geom=\"polygon\",aes(fill=type2,color=type2),alpha=.2,show.legend=F) +\n        geom_line(data=dd4,color=\"darkred\",size=1.5) + coord_equal() +\n        xlab(\"out 1\") + ylab(\"out 2\")\n    print(p3)\n\n\n    # Figure 10\n    KC.info2 <- vdf[vdf$type==\"KC\",]\n    KC.info2$claw <- factor(KC.info2$claw,\n                            levels = c('1','2','3','4','5','6','0'),ordered = TRUE)\n\n    p4 <- ggplot(KC.info2, aes(factor(claw),dist,color=factor(claw),fill=factor(claw)))\n    p4 <- p4 + geom_boxplot(notch=FALSE,alpha=0.5) + geom_jitter(width = 0.2) +\n        guides(fill=FALSE,color=FALSE) + xlab(\"number of claws\") + ylab(\"distance to neuropile in nm\")\n    print(p4)\n\n    # Figure 11\n    out <- semiparYQ(Xhat4, K=8, verbose=FALSE)\n    mean1 <- out$mean1\n    mean2 <- out$mean2\n    mean3 <- out$mean3\n    t_proj_ls <- rep(NA,n)\n    proj_ls <- matrix(NA,n,p)\n    for (i in 1:n)\n    {\n        t_ls <- seq(-0.2,1.2,0.0001)\n        dist_ls=rep(NA,length(t_ls))\n        for (i_t in 1:length(t_ls))\n        {\n            t <- t_ls[i_t]\n            this_mean <-(1-t)^2*mean1+2*(1-t)*t*mean3+t^2*mean2\n            dist_ls[i_t] <- sum((this_mean-Xhat4[i,])^2)\n        }\n        proj_t <- t_ls[which(dist_ls==min(dist_ls))[1]]\n        t_proj_ls[i] <- proj_t\n        proj_ls[i,] <- (1-proj_t)^2*mean1+2*(1-proj_t)*proj_t*mean3+proj_t^2*mean2\n    }\n    Xhat_dist <- vdf$dist[vdf$type==\"KC\"]\n\n    Xhat5 <- rbind(Xhat4[,1:2],proj_ls[,1:2])\n    df <- data.frame(x=Xhat5[,1],y=Xhat5[,2],idx=rep(1:nrow(Xhat4),times=2),type=rep(c(\"KC\",\"ti\"),each=nrow(Xhat4)))\n    p5 <- ggplot(df, aes(x,y,group=idx,color=type)) + geom_point(size=2) + geom_line(color=\"red\",linetype=3) + xlab(\"out 1\") + ylab(\"out 2\") +\n        scale_colour_manual(values=c(tmpcol[1],\"darkred\"),labels=c(\"KC\",expression(t[i])))\n    print(p5)\n\n    # Figure 12\n    df <- data.frame(x=t_proj_ls,y=Xhat_dist,claw=vdf$claw[vdf$type==\"KC\"])\n    p6 <- ggplot(df, aes(x, y)) +  geom_point(aes(size=claw),color=tmpcol[1],alpha=.5) +\n        geom_smooth(method = \"lm\", se = TRUE) +\n        xlab(expression(t[i])) + ylab(expression(delta[i]))\n    print(p6)\n}\n",
    "created" : 1487258675696.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "784714639",
    "id" : "F2560BB0",
    "lastKnownWriteTime" : 1487595900,
    "last_content_update" : 1487595900249,
    "path" : "~/Dropbox/Worm/Codes/Connectome/mbstructure/R/semipar.R",
    "project_path" : "R/semipar.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}